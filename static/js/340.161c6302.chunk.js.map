{"version":3,"file":"static/js/340.161c6302.chunk.js","mappings":"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","sources":["Pages/Tweets/Tweets.styled.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","Fetch/fetchUsers.jsx","components/Card/Card.styled.jsx","components/Card/Card.jsx","Pages/Tweets/Tweets.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const TweetsWrapper = styled.div` \n  background-color: #AE7BE3;\n  min-height: 100vh;\n  padding-top: 40px; \n`;\n\nexport const TweetsList = styled.ul`\nmargin: 0 auto;\n  padding: 30px 150px;\n  background-color: #AE7BE3;\n  display: flex;  \n  gap 45px;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nexport const GoBackWrapper = styled.div`\n  padding: 0 150px;\n  margin-bottom: 5px;\n`;\n\nexport const Link = styled(NavLink)`\n  margin: 0 auto;\n  width: 100px;\n  display: flex;\n  gap: 5px;\n  justify-content: center;\n  align-items: center;\n  padding: 8px 16px;\n  border-radius: 5px;\n  text-decoration: none;\n  color: black;\n  font-size: 20px;\n  font-weight: 500;\n  transform: scale(1);\n  box-shadow: none;\n  &:first child{\n  margin-right: 30px;\n  box-shadow: 0px 4px 4px 2px rgba(30, 46, 46, 1);\n  }\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n    border: 1px solid rgba(31, 10, 38, 1);\n    box-shadow: 0px 8px 8px 4px rgba(30, 46, 46, 1);\n  }\n  &.active {  \n    background-color: #5CD3A8;\n    &:hover,\n    &:focus {\n      border: none;\n      color: inherit;\n   }  \n`;\n\nexport const BtnContainer = styled.div`\nmargin-left: auto;\nmargin-right: auto;\nmargin-top: 20px;\nmargin-bottom: 20px;\n`;","import styled from 'styled-components';\n\nexport const Btn = styled.button`\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 10px 15px;\n  z-index:5;\n  width: 150px;\n  height: 50px;\n  border: none;\n  border-radius: 10px;\n  background-color: #EBD8FF; \n  color: #373737;\n  font-weight: 500;\n  font-size: 20px;\n  text-align: center; \n   &:hover,\n  &:focus {\n    background-color: #5CD3A8; \n }\n}  \n`;\n\n\n\n","import { Btn} from \"./Button.styled\";\n\nexport const Button = ({ onClick, text, selected }) => {  \n    return (     \n        <Btn type=\"button\" onClick={onClick} selected ={selected}>{text}</Btn>          \n    );\n};\n\n\n\n","import axios from \"axios\";\naxios.defaults.baseURL = axios.defaults.baseURL = 'https://644268a633997d3ef90f6160.mockapi.io/';\n\nexport const fetchUsers = async (page,per_page) => {\n    try {\n        if (page && per_page) {\n        return await axios\n          .get(`users/?page=${page}&limit=${per_page}`)\n            .then(({ data }) => { \n                console.log(data);\n            return data;\n          });\n      }\n      return await axios.get(`users/`).then( ({ data }) => {\n           return data;\n      });\n    }\n    catch(err) {\n        console.log(err);\n    }\n  };\n\n  export const refreshUsers = async(id,body)=>{\n   try{\n    await axios.put(`users/${id}`, {...body}).then( ({ data }) => {\n     return data;\n    })}\n    catch(err) {\n        console.log(err);\n    }\n  }","import styled from 'styled-components';\n\nexport const CardWrapper = styled.div`\n  width: 380px;\n  height: 460px;\nborder-radius: 20px;\nbackground: linear-gradient(to bottom right, #471CA9, #5736A3, #4B2A99);\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;;\n`;\n\nexport const CardTop = styled.div`\n  flex-grow: 1;\n   flex: 1;\n`;\n\nexport const CardBottom = styled.div`\ncolor: #EBD8FF;\nfont-weight: 500;\nfont-size: 20px;\nalign-items: center;\ntext-align: center;\n flex-grow: 1;\n   flex: 1;\n   display: flex;\n   flex-direction: column;\ngap: 16px;\njustify-content: center;\n`;\n\nexport const Avatar = styled.img`\nmargin: 0 auto;\nalign-items: center;\nborder-radius: 50px;\n border: 5px solid #EBD8FF;\nz-index: 10;\n`;","import { useState } from 'react';\nimport { Button } from 'components/Button/Button';\nimport PropTypes from 'prop-types';\nimport { CardWrapper, CardTop, CardBottom, Avatar } from './Card.styled';\nimport { refreshUsers } from 'Fetch/fetchUsers';\n\n\nexport const Card = ({ id, tweets, followers, avatar, user, followed, }) => {\n  const [followersCount, setFollowersCount] = useState(followers);\n    const [selection, setSelection] = useState(followed);\n    \n      const onBtnClick = () => {\n    setSelection(!selection);\n    if (selection) {\n      refreshUsers(id, {\n        user,\n        avatar,\n        followed: !selection,\n        tweets,\n        followers: followersCount - 1,\n      });\n      setFollowersCount(followersCount - 1);\n    }\n    if (!selection) {\n      refreshUsers(id, {\n        user,\n        avatar,\n        followed: !selection,\n        tweets,\n        followers: followersCount + 1,\n      });\n      setFollowersCount(followersCount + 1);\n    }\n  };\n    \n    return (   \n        <CardWrapper key={id}>\n            <CardTop>\n                <p>123</p>\n            </CardTop>     \n             <Avatar src={avatar} alt={user} width={62} height={62}/>\n            <CardBottom>\n                <span>{tweets} TWEETS </span>\n                <span>{followersCount.toLocaleString('en-US')} FOLLOWERS </span> \n            <Button   text={selection ? 'FOllOWING' : 'FOLLOW'}\n        onClick={onBtnClick}\n        selected={selection}/>    \n            </CardBottom>\n        </CardWrapper>        \n    );\n};\n\nCard.propTypes = {\n    id: PropTypes.string.isRequired,\n    tweets: PropTypes.number.isRequired,\n    followers: PropTypes.number.isRequired,\n    avatar: PropTypes.string.isRequired,\n    user: PropTypes.string.isRequired  \n};\n\n\n\n\n","import { useLocation } from 'react-router-dom';\nimport { useEffect, useState } from \"react\";\nimport { Loader } from \"components/Loader/Loader\";\nimport {TweetsWrapper, TweetsList, GoBackWrapper, Link, BtnContainer } from \"./Tweets.styled\";\nimport { FaArrowLeft } from \"react-icons/fa\";\nimport { Button } from 'components/Button/Button';\nimport { fetchUsers } from \"Fetch/fetchUsers\";\nimport { Card } from \"components/Card/Card\";\n\nfunction Tweets() {\n  const location = useLocation(); \n  const [isLoading, setIsLoading] = useState(false);\n  const [showLoadMoreBtn, setShowLoadMoreBtn] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [pageNumber, setPageNumber] = useState(1);\n  const PER_PAGE = 3;\n  const [type] = useState('');\n\n  useEffect(() => {  \n          const getUsers = async ({page,per_page, value })=>{\n              try{\n                  setIsLoading(true)\n              return await fetchUsers(page,per_page, value).then((data) => {\n              data.length >= PER_PAGE ? setShowLoadMoreBtn(true) :  setShowLoadMoreBtn(false)\n              setUsers([...users, ...data])}\n              )}\n              catch(err) {console.log(err)}\n              finally{\n                  setIsLoading(false)\n              }\n      }\n    getUsers({ page: pageNumber, per_page: PER_PAGE, value: type }) \n     // eslint-disable-next-line\n    }, [pageNumber, type]);\n\n  const loadMore = () => {\n    setPageNumber(pageNumber + 1)\n  };  \n\n  return (\n    <TweetsWrapper>\n       {isLoading && <Loader/>}\n      <GoBackWrapper>\n        <Link to={location.state?.from ?? '/'}><FaArrowLeft/>Go back</Link>\n      </GoBackWrapper>  \n      <TweetsList>\n         {users.length>0 && users.map(({id, user, avatar,followers,tweets}) => <Card key={id} id={id} tweets={tweets} followers={followers} user={user} avatar={avatar} />)}      \n      </TweetsList>\n       <BtnContainer>\n        {showLoadMoreBtn && <Button text=\"Load more\" onClick={loadMore} />}\n      </BtnContainer>\n    </TweetsWrapper> \n  );\n}\n\nexport default Tweets;"],"names":["TweetsWrapper","styled","TweetsList","GoBackWrapper","Link","NavLink","BtnContainer","Btn","Button","onClick","text","selected","type","axios","fetchUsers","page","per_page","then","data","console","log","refreshUsers","id","body","CardWrapper","CardTop","CardBottom","Avatar","Card","tweets","followers","avatar","user","followed","useState","followersCount","setFollowersCount","selection","setSelection","src","alt","width","height","toLocaleString","location","useLocation","isLoading","setIsLoading","showLoadMoreBtn","setShowLoadMoreBtn","users","setUsers","pageNumber","setPageNumber","useEffect","getUsers","value","length","Loader","to","state","from","map"],"sourceRoot":""}